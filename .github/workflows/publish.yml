name: Publish Package

on:
  push:
    branches: [ main ]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - uses: pnpm/action-setup@v2
        with:
          version: 9
          
      - name: Install dependencies and generate lockfile
        run: |
          if [ ! -f pnpm-lock.yaml ]; then
            echo "No lockfile found, generating one..."
            pnpm install --lockfile-only
            git config --global user.email "smoobot@smoo.ai"
            git config --global user.name "SmooBot"
            git add pnpm-lock.yaml
            git commit -m "chore: add pnpm-lock.yaml"
            git push
          fi
          pnpm install
        
      - name: Type check
        run: pnpm typecheck
        
      - name: Lint
        run: pnpm lint
        
      - name: Test
        run: pnpm test

      - name: Update version
        run: |
          # Get package name and current version from package.json
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Try to get latest version from npm
          NPM_VERSION=$(npm view $PACKAGE_NAME version 2>/dev/null || echo "0.0.0")
          
          if [ "$NPM_VERSION" = "$CURRENT_VERSION" ]; then
            # Bump patch version
            IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
            NEW_VERSION="${major}.${minor}.$((patch + 1))"
          else
            # Use version from package.json if it's different
            NEW_VERSION=$CURRENT_VERSION
          fi
          
          # Ensure major version is at least 1
          if [[ "$NEW_VERSION" =~ ^0\. ]]; then
            NEW_VERSION="1.0.0"
          fi
          
          # Update package.json
          node -e "const pkg=require('./package.json'); pkg.version='$NEW_VERSION'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n')"
          
          # Commit and tag
          git config --global user.email "smoobot@smoo.ai"
          git config --global user.name "SmooBot"
          git add package.json
          git commit -m "chore: bump version to $NEW_VERSION"
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push && git push --tags

      - name: Publish to NPM
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.SMOOAI_NPM_TOKEN }}